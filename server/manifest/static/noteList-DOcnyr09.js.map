{"version":3,"file":"noteList-DOcnyr09.js","sources":["../../../client/src/components/note/noteList.tsx"],"sourcesContent":["\r\nimport { useState } from \"react\"\r\nimport Select from \"../select/select\";\r\n\r\nconst items = [{\r\n  id: -1,\r\n  name: '全部'\r\n}, {\r\n  id: 0,\r\n  name: '未发布'\r\n}];\r\n\r\nconst pushItems = [{\r\n  id: -1,\r\n  name: '全部'\r\n}, {\r\n  id: 0,\r\n  name: '未发布'\r\n}, {\r\n  id: 1,\r\n  name: '已发布'\r\n}]\r\n\r\nconst NoteList = () => {\r\n  const [category, setCategory] = useState(1);\r\n  const [isPush, setIsPush] = useState(-1);\r\n  const onSelectedValue = (value: number) => {\r\n    setCategory(value)\r\n  }\r\n  const onPushValue = (value: number) => {\r\n    setIsPush(value)\r\n  }\r\n  return <>\r\n    <div className=\"z-20 grid grid-cols-5 text-base bg-white gap-y-4\">\r\n      <div className=\"inline-grid items-end h-24 pr-3\">\r\n        <div className=\"block text-sm font-medium leading-6 text-gray-900\">\r\n          标题\r\n        </div>\r\n        <div className=\"mt-2\">\r\n          <input\r\n            name=\"title\"\r\n            type=\"text\"\r\n            autoComplete=\"given-name\"\r\n            className=\"px-3 block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"inline-grid items-end pr-3\">\r\n        <div className=\"block text-sm font-medium leading-6 text-gray-900\">\r\n          类型\r\n        </div>\r\n        <div className=\"grid mt-2\">\r\n          <Select {...{ onSelectedValue, items, value: category }} />\r\n        </div>\r\n      </div>\r\n      <div className=\"inline-grid items-end h-24 pr-3\">\r\n        <div className=\"block text-sm font-medium leading-6 text-gray-900\">\r\n          标签\r\n        </div>\r\n        <div className=\"grid mt-2\">\r\n          <Select {...{ onSelectedValue, items, value: category }} />\r\n        </div>\r\n      </div>\r\n      <div className=\"inline-grid items-end h-24 pr-3\">\r\n        <div className=\"block text-sm font-medium leading-6 text-gray-900\">\r\n          是否发布\r\n        </div>\r\n        <div className=\"grid mt-2\">\r\n          <Select {...{ onSelectedValue: onPushValue, items: pushItems, value: isPush }} />\r\n        </div>\r\n      </div>\r\n      <div className=\"inline-grid items-end h-24\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"px-12 py-2 text-sm font-semibold text-white bg-indigo-600 rounded-md shadow-sm hover:bg-indigo-500 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\r\n        >\r\n          搜索\r\n        </button>\r\n      </div>\r\n      <div className=\"p-3 border-b border-gray-200\">标题</div>\r\n      <div className=\"p-3 border-b border-gray-200\">类别</div>\r\n      <div className=\"p-3 border-b border-gray-200\">标签</div>\r\n      <div className=\"p-3 border-b border-gray-200\">是否发布</div>\r\n      <div className=\"p-3 border-b border-gray-200\">操作</div>\r\n    </div>\r\n    <div className=\"grid grid-cols-4 text-base pb-11\">\r\n      {/* {notes.map((note: Note) => {\r\n          const category = (objCategory[note.category] as unknown as Category)?.alias;\r\n          return (\r\n            <React.Fragment key={note.id}>\r\n              <div className=\"px-3 py-6 border-b border-gray-200\">\r\n                {note.title}\r\n              </div>\r\n              <div className=\"px-3 py-6 border-b border-gray-200\">\r\n                {category}\r\n              </div>\r\n              <div className=\"px-3 py-6 border-b border-gray-200\">\r\n                {note.published == 1 ? '是' : '否'}\r\n              </div>\r\n              <div className=\"px-3 py-6 border-b border-gray-200 cursor-pointer\">\r\n                <span className=\"flex items-center ml-auto font-medium text-indigo-600\">\r\n                  <span\r\n                    onClick={() => viewNote(note)}\r\n                    className=\"pointer-events-auto hover:text-indigo-500\"\r\n                  >\r\n                    <img\r\n                      className=\"w-4 h-4\"\r\n                      src={`/view.svg`}\r\n                      alt=\"Your Company\"\r\n                    />\r\n                  </span>\r\n                  <span className=\"w-px h-6 mx-3 bg-slate-400/20\"></span>\r\n                  <span\r\n                    onClick={() => editNote(note)}\r\n                    className=\"pointer-events-auto hover:text-indigo-500\"\r\n                  >\r\n                    <img\r\n                      className=\"w-4 h-4\"\r\n                      src={`/edit.svg`}\r\n                      alt=\"Your Company\"\r\n                    />\r\n                  </span>\r\n                  <span className=\"w-px h-6 mx-3 bg-slate-400/20\"></span>\r\n                  <span\r\n                    onClick={() => deleteNote(note)}\r\n                    className=\"pointer-events-auto hover:text-indigo-500\"\r\n                  >\r\n                    <img\r\n                      className=\"w-4 h-4\"\r\n                      src={`/delete.svg`}\r\n                      alt=\"Your Company\"\r\n                    />\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            </React.Fragment>\r\n          );\r\n        })} */}\r\n    </div>\r\n  </>\r\n}\r\n\r\nexport default NoteList"],"names":["items","pushItems","NoteList","category","setCategory","useState","isPush","setIsPush","onSelectedValue","value","onPushValue","jsxDEV","Fragment","this","Select"],"mappings":"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"}