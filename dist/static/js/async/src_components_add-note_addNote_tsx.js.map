{"version":3,"file":"static/js/async/src_components_add-note_addNote_tsx.js","sources":["/Users/wangl577/Documents/project/mango-app/src/components/add-note/addNote.tsx","/Users/wangl577/Documents/project/mango-app/src/components/modal/modal.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport useFetch from '~/hooks/useFetch';\nimport * as marked from 'marked';\nimport CodeMirror, { EditorView } from '@uiw/react-codemirror';\nimport httpRequest from '~/lib/httpClient';\nimport { Note, Response } from '~/types';\nimport Modal from '~/components/modal/modal';\n\nfunction AddNote() {\n  const { data, loading } = useFetch('/category/find');\n  const markdownRef = useRef<HTMLDivElement>(null);\n  const [category, setCagetory] = useState<string>('');\n  const [title, setTitle] = useState<string>('');\n  const [published, setPublished] = useState<number>(0);\n  const [content, setContent] = useState<string>('');\n  const [open, setOpen] = useState(false);\n  const onChange = React.useCallback((val: string) => {\n    if (markdownRef.current) {\n      setContent(val);\n      markdownRef.current.innerHTML = marked.parse(val) as string;\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!loading && data?.data) {\n      setCagetory(data.data[0].id)\n    }\n  }, [loading])\n\n  const onOk = () => {\n    setOpen(false);\n  }\n\n  const savePost = async () => {\n    const res: Response<Omit<Note, 'id'>> = await httpRequest.post('/auth/note/create', {\n      title,\n      content: encodeURIComponent(content),\n      category: category,\n      published,\n    });\n    if (res.code === 0) {\n      setOpen(true)\n    }\n  };\n\n\n  return (\n    <>\n      <div className=\"grid grid-cols-2 gap-4 m-4 text-4xl\">\n        <div className=\"h-24 p-3\">\n          <div className=\"sm:col-span-3\">\n            <div\n              className=\"block text-sm font-medium leading-6 text-gray-900\"\n            >\n              标题\n            </div>\n            <div className=\"mt-2\">\n              <input\n                name=\"title\"\n                type=\"text\"\n                onChange={(e) => setTitle(e.target.value)}\n                value={title}\n                autoComplete=\"given-name\"\n                className=\"px-3 block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"h-24 p-3\">\n          <div\n            className=\"block text-sm font-medium leading-6 text-gray-900\"\n          >\n            类型\n          </div>\n          <div className=\"grid mt-2\">\n            <select\n              name=\"category\"\n              value={category}\n              onChange={(e) => setCagetory(e.target.value)}\n              autoComplete=\"category-name\"\n              className=\"px-3 appearance-none row-start-1 col-start-1 block w-full text-base max-w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-600\"\n            >\n              {data && data.data.map((c) => {\n                  return (\n                    <option key={c.id} value={c.id}>\n                      {c.alias}\n                    </option>\n                  );\n                })}\n            </select>\n          </div>\n        </div>\n        <div className=\"p-3\">\n          <div\n            className=\"relative\n        h-[720px]\n        overflow-y-scroll\n        overscroll-contain\n        text-base\"\n          >\n            <CodeMirror\n              value={content}\n              height=\"auto\"\n              theme={'dark'}\n              minHeight=\"720px\"\n              extensions={[EditorView.lineWrapping]}\n              basicSetup={{ foldGutter: false }}\n              onChange={onChange}\n            />\n          </div>\n        </div>\n        <div className={`p-3`}>\n          <div className=\"h-[720px] overflow-y-scroll overscroll-contain\">\n            <div\n              className={`\n                  prose\n                  prose-slate\n                  prose-h2:mt-0\n                  prose-h3:mt-0\n                  prose-h4:mt-0\n                  max-w-full\n                  prose-code:rounded-md\n                  prose-code:before:content-none \n                  prose-code:after:content-none\n                  prose-p:before:content-none \n                  prose-p:after:content-none\n                  prose-hr:my-4\n                `}\n              ref={markdownRef}\n            ></div>\n          </div>\n        </div>\n        <div className=\"col-span-2 p-3\">\n          <div className=\"mt-6 space-y-6\">\n            <div className=\"relative flex gap-x-3\">\n              <div className=\"flex items-center h-6\">\n                <input\n                  type=\"checkbox\"\n                  checked={!!published}\n                  onChange={(e) => setPublished(e.target.checked ? 1 : 0)}\n                  className=\"w-4 h-4 text-indigo-600 border-gray-300 rounded focus:ring-indigo-600\"\n                />\n              </div>\n              <div className=\"text-sm leading-6\">\n                <div\n                  className=\"font-medium text-gray-900\"\n                >\n                  是否发布\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-span-2 p-5\">\n        <button\n            type=\"button\"\n            onClick={savePost}\n            className=\"w-full py-2 text-sm font-semibold text-white bg-indigo-600 rounded-md shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n          >\n            保存\n          </button>\n        </div>\n      </div>\n      <Modal\n        {...{\n          open,\n          ...{ content: '新增成功' },\n          onOk\n        }}\n      />\n    </>\n  );\n}\n\nexport default AddNote;\n\n","export default function Modal(props) {\n  const { title, content, open, onOk, onCancel } = props;\n  return (\n    <div className={`relative z-10 ${open ? '' : 'hidden'}`}>\n      <div className=\"fixed inset-0 transition-opacity bg-gray-500/20\"></div>\n      <div className=\"fixed inset-0 z-10 w-screen overflow-y-auto\">\n        <div className=\"flex items-end justify-center min-h-full p-4 text-center sm:items-center sm:p-0\">\n          <div className=\"relative overflow-hidden text-left transition-all transform bg-white rounded-lg shadow-xl sm:my-8 sm:w-full sm:max-w-lg\">\n            <div className=\"px-4 pt-5 pb-4 bg-white sm:p-6 sm:pb-4\">\n              <div className=\"sm:flex sm:items-start\">\n                <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\n                  <h3 className=\"text-base font-semibold text-gray-900\">\n                    {title}\n                  </h3>\n                  <div className=\"mt-2\">\n                    <p className=\"text-sm text-gray-500\">{content}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"px-4 py-3 bg-gray-50 sm:flex sm:flex-row-reverse sm:px-6\">\n              {onOk && (\n                <button\n                  type=\"button\"\n                  onClick={onOk}\n                  className=\"inline-flex justify-center w-full px-3 py-2 text-sm font-semibold text-white bg-indigo-600 rounded-md shadow-xs hover:bg-indigo-500 sm:ml-3 sm:w-auto\"\n                >\n                  Ok\n                </button>\n              )}\n              {onCancel && (\n                <button\n                  type=\"button\"\n                  onClick={onCancel}\n                  className=\"inline-flex justify-center w-full px-3 py-2 mt-3 text-sm font-semibold text-gray-900 bg-white rounded-md shadow-xs ring-1 ring-gray-300 ring-inset hover:bg-gray-50 sm:mt-0 sm:w-auto\"\n                >\n                  Cancel\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAEA;AAAA;;AACA;AAAA;AACA;AAAA;;AACA;AACA;AACA;;;;;;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AAKA;AAAA;;AACA;AACA;AACA;;;;;;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AADA;;;;;AAIA;;;;;;;;;;;;;;;;;AAIA;AAAA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;AAIA;AAAA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;;AAaA;AACA;;;;;;;;;;;;;;;;AAIA;AAAA;AACA;AAAA;AACA;AAAA;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAGA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AAKA;AAEA;AACA;AAAA;AAAA;AACA;;;;;;;;AAKA;AApKA;;AACA;;;AADA;AAsKA;;;;;;;;;;;;;;;;;;;;;;;;AC9KA;AACA;AACA;AACA;;AACA;AAAA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;;AACA;AAAA;AACA;AAAA;AACA;AAAA;;AACA;AAAA;AACA;;;;;;AAEA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA;AAAA;;AACA;AAEA;AACA;AACA;AACA;;;;;;AAIA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA;AA7CA"}