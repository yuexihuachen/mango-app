{"version":3,"file":"static/js/async/src_pages_layout_layout_tsx.js","sources":["/Users/wangl577/Documents/project/mango-app/src/components/main-skeleton/mainSkeleton.tsx","/Users/wangl577/Documents/project/mango-app/src/components/main/main.tsx","/Users/wangl577/Documents/project/mango-app/src/components/sidebar-skeleton/sidebarSkeleton.tsx","/Users/wangl577/Documents/project/mango-app/src/components/sidebar/sidebar.tsx","/Users/wangl577/Documents/project/mango-app/src/pages/layout/layout.tsx"],"sourcesContent":["export default () => {\n    return <>\n          <main className=\"grid px-6 pt-24 bg-white place-items-center\">\n        <div className=\"text-center\">\n          <p className=\"text-base font-semibold text-indigo-600\">学无止尽</p>\n          <h1 className=\"mt-4 text-5xl font-semibold tracking-tight text-gray-900 text-balance sm:text-7xl\">\n            Note not found\n          </h1>\n          <p className=\"mt-6 text-lg font-medium text-gray-500 text-pretty sm:text-xl/8\">\n            Sorry, we couldn’t find the Note you’re looking for.\n          </p>\n          <div className=\"flex items-center justify-center mt-10 gap-x-6\">\n\n            <a href=\"/\" className=\"text-sm font-semibold text-gray-900\">\n            View Other Note <span aria-hidden=\"true\">&rarr;</span>\n            </a>\n          </div>\n        </div>\n      </main>\n    </>\n}","import { useEffect, useRef } from 'react';\nimport { marked } from 'marked';\nimport { useAppSelector } from '~/hooks';\nimport MainSkeleton from '../main-skeleton/mainSkeleton';\n\nexport default function Main() {\n  const markdownRef = useRef<HTMLDivElement>(null);\n  const curNote = useAppSelector((state) => state.selectedNote.selectedNote);\n\n  useEffect(() => {\n    let content = ``;\n    if (curNote?.content) {\n      content = curNote.content as string;\n    }\n    const deContent = decodeURIComponent(content);\n    markdownRef.current.innerHTML = marked.parse(deContent);\n  }, [curNote]);\n  return (\n    <>\n      <div\n        className={`prose prose-slate prose-h2:mt-0 prose-h3:mt-0 prose-h4:mt-0 max-w-full prose-code:rounded-md prose-code:before:content-none  prose-code:after:content-none prose-p:before:content-none prose-p:after:content-none prose-hr:my-4`}\n        ref={markdownRef}>\n      </div>\n      {\n        !curNote?.content && <MainSkeleton />\n      }\n    </>\n  );\n}\n","export default () => {\n  const list = [1,2,3,4,5,6,7,8,9]\n    return <>\n         {\n          list.map((_, index) => {\n            return  <li key={index} className=\"mt-2\">\n            <div\n              className={`truncate text-base px-4 py-2 rounded text-slate-700 font-medium bg-gray-50`}\n            >\n              &nbsp;\n            </div>\n          </li>\n          })\n         }\n    </>\n}","import { useState } from 'react';\nimport { useAppSelector, useAppDispatch } from '~/hooks';\nimport { selectedNote } from \"~/features/selected-note/selectedNoteSlice\";\nimport SidebarSkeleton from '../sidebar-skeleton/sidebarSkeleton';\n\nexport default function Sidebar(props) {\n  const { notes } = props;\n  const dispatch = useAppDispatch();\n  const curNote = useAppSelector(state => state.selectedNote.selectedNote)\n  const [keyword, setKeywrod] = useState<string>('');\n\n  const filterPosts = (notes) => {\n    if (notes?.length) {\n      const filterPost = notes.filter((note) => note.title.includes(keyword));\n      return filterPost;\n    }\n    return [];\n  };\n\n  const onSelectedNote = (note) => {\n    dispatch(selectedNote(note))\n  }\n\n  return (\n    <>\n      <nav id=\"nav\" className=\"lg:text-sm lg:leading-6\">\n        <div className=\"sticky top-0 -ml-0.5 bg-white\">\n          <div className=\"h-6 bg-white\"></div>\n          <div className=\"relative\">\n            <div className=\"absolute inset-y-0 left-0 flex items-center pl-3\">\n              <img src=\"/search.svg\" alt=\"search Logo\" width={16} height={16} />\n            </div>\n            <input\n              type=\"text\"\n              value={keyword}\n              onChange={(e) => setKeywrod(e.target.value)}\n              className=\"block w-full rounded-md border-0 py-1.5 pl-9 pr-20 shadow-sm ring-1 ring-inset ring-gray-300 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-purple-700\"\n            />\n          </div>\n          <div className=\"shadow-md bg-gradient-to-b from-white\"></div>\n        </div>\n        <ul>\n          {filterPosts(notes).map((note) => {\n            return (\n              <li key={note.id} className=\"mt-2\">\n                <div\n                    onClick={() => onSelectedNote(note)}\n                  className={`truncate text-base px-4 py-2 rounded text-slate-700 font-medium ${\n                    curNote?.id === note.id ? 'bg-blue-100' : 'hover:bg-blue-50'\n                  }`}\n                >\n                  {note.title}\n                </div>\n              </li>\n            );\n          })}\n          {\n            !notes?.length && <SidebarSkeleton />\n          }\n        </ul>\n      </nav>\n    </>\n  );\n}\n","import { useParams } from \"react-router\";\nimport Sidebar from \"~/components/sidebar/sidebar\";\nimport { useEffect, useState  } from 'react';\nimport { useAppDispatch } from \"~/hooks\";\nimport { selectedNote } from \"~/features/selected-note/selectedNoteSlice\";\nimport Main from \"~/components/main/main\";\nimport httpRequest from \"~/lib/httpClient\";\n\nconst Layout = () => {\n  const params = useParams();\n  const dispatch = useAppDispatch();\n  const id = params?.categoryId?.slice(6) || '1';\n  const [notes, setNotes] = useState([])\n\n  useEffect(() => {\n    if (id) {\n      httpRequest.post('/note/find', {\n        category: id,\n      }).then((res: any) => {\n        if (res.code === 0) {\n          dispatch(selectedNote(res.data[0]));\n          setNotes(res.data)\n        }\n      })\n\n    }\n  }, [id]);\n  \n  return (\n    <>\n    <div className=\"lg:block fixed w-[20.2666rem] inset-0 z-20  top-[4rem] left-[max(0px,calc(50%-48rem))] right-auto pb-10 pl-8 pr-6 overflow-y-auto border-r-1 border-gray-50\">\n      <Sidebar {...{notes}} />\n    </div>\n    <div className=\"lg:pl-[20.8rem]\">\n      <main className=\"relative z-20 max-w-3xl pt-10 xl:max-w-none  h-[calc(100vh-64px)] overflow-y-auto\">\n        <Main />\n      </main>\n    </div>\n  </>\n  );\n};\n\nexport default Layout;\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AAAA;AACA;AAAA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;AAGA;AAAA;AAAA;;;;;;AAGA;AAAA;AAEA;AAAA;AAAA;;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AAEA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;;;;;;AAGA;;;;;;;AAIA;AAvBA;;AAEA;;;AAFA;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;;;;;;AAHA;;;;;AAOA;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;;AACA;AAAA;;AACA;AAAA;;;;;;AACA;AAAA;;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AAGA;AAAA;;;;;;;;;;;;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;;;;;AAPA;;;;;AAWA;AAEA;;;;;;;;;;;;;;;;;;AAMA;AA1DA;;AAEA;AACA;;;AAHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;;AAFA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;;AAEA;AAAA;AACA;AAAA;;;;;;;;;;;AAEA;AAAA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;AAKA;AAhCA;;AACA;AACA;;;AAFA;AAkCA"}