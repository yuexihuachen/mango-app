{"version":3,"file":"static/js/async/src_pages_category_category_tsx.js","sources":["/Users/wangl577/Documents/project/mango-app/src/components/edit-category/editCategoty.tsx","/Users/wangl577/Documents/project/mango-app/src/components/modal/modal.tsx","/Users/wangl577/Documents/project/mango-app/src/components/save-category/saveCategoty.tsx","/Users/wangl577/Documents/project/mango-app/src/components/search-category/searchCategory.tsx","/Users/wangl577/Documents/project/mango-app/src/components/tabs/tabs.tsx","/Users/wangl577/Documents/project/mango-app/src/pages/category/category.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useAppSelector, useAppDispatch } from '~/hooks';\nimport { updateCategory } from '~/features/category/categorySlice';\nimport { updateStatus } from '~/features/global/globalSlice';\n\nfunction EditCategory() {\n  const dispatch = useAppDispatch();\n  const category = useAppSelector((state) => state.category.category);\n  const fetchResult = useAppSelector((state) => state.category.fetchResult);\n\n  const [title, setTitle] = useState<string>('');\n  const [alias, setAlias] = useState<string>('');\n  const [order, setOrder] = useState<number>(1);\n\n  const editCategory = () => {\n    dispatch(\n      updateCategory({\n        fields: {\n          name: title,\n          alias,\n          orderid: order,\n        },\n        condition: {\n          id: category.id,\n        },\n      }),\n    );\n  };\n\n  useEffect(() => {\n    if (Object.keys(category).length) {\n      setTitle(category.name);\n      setAlias(category.alias);\n      setOrder(category.orderid);\n    }\n  }, [category]);\n\n  useEffect(() => {\n    if (fetchResult.code === 0) {\n      dispatch(\n        updateStatus({\n          toast: {\n            content: '修改成功',\n            show: true,\n          },\n        }),\n      );\n    }\n  }, [fetchResult]);\n\n  return (\n    <>\n      <div className=\"grid grid-rows-3 w-9/12  gap-y-3 mx-4 text-base sticky top-[55px] bg-white z-20\">\n        <div className=\"inline-grid items-end h-16 p-3\">\n          <div className=\"sm:col-span-3\">\n            <div className=\"block text-sm font-medium leading-6 text-gray-900\">\n              名称\n            </div>\n            <div className=\"mt-2\">\n              <input\n                name=\"title\"\n                onChange={(e) => setTitle(e.target.value)}\n                type=\"text\"\n                autoComplete=\"given-name\"\n                value={title}\n                className=\"px-3 block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"inline-grid items-end h-16 p-3\">\n          <div className=\"sm:col-span-2\">\n            <div className=\"block text-sm font-medium leading-6 text-gray-900\">\n              别名\n            </div>\n            <div className=\"mt-2\">\n              <input\n                name=\"title\"\n                onChange={(e) => setAlias(e.target.value)}\n                type=\"text\"\n                autoComplete=\"given-name\"\n                value={alias}\n                className=\"px-3 block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"inline-grid items-end h-16 p-3\">\n          <div className=\"sm:col-span-2\">\n            <div className=\"block text-sm font-medium leading-6 text-gray-900\">\n              排列顺序\n            </div>\n            <div className=\"mt-2\">\n              <input\n                name=\"order\"\n                onChange={(e) => setOrder(parseInt(e.target.value, 10))}\n                type=\"number\"\n                autoComplete=\"given-name\"\n                value={order}\n                className=\"px-3 block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"inline-grid items-end justify-end h-16 p-3\">\n          <button\n            type=\"button\"\n            onClick={editCategory}\n            className=\"px-8 py-2 text-sm font-semibold text-white bg-indigo-600 rounded-md shadow-sm hover:bg-indigo-500 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n          >\n            保存\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default EditCategory;\n","export default function Modal(props) {\n  const { title, content, open, onOk, onCancel } = props;\n  return (\n    <div className={`relative z-10 ${open ? '' : 'hidden'}`}>\n      <div className=\"fixed inset-0 transition-opacity bg-gray-500/20\"></div>\n      <div className=\"fixed inset-0 z-10 w-screen overflow-y-auto\">\n        <div className=\"flex items-end justify-center min-h-full p-4 text-center sm:items-center sm:p-0\">\n          <div className=\"relative overflow-hidden text-left transition-all transform bg-white rounded-lg shadow-xl sm:my-8 sm:w-full sm:max-w-lg\">\n            <div className=\"px-4 pt-5 pb-4 bg-white sm:p-6 sm:pb-4\">\n              <div className=\"sm:flex sm:items-start\">\n                <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\n                  <h3 className=\"text-base font-semibold text-gray-900\">\n                    {title}\n                  </h3>\n                  <div className=\"mt-2\">\n                    <p className=\"text-sm text-gray-500\">{content}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"px-4 py-3 bg-gray-50 sm:flex sm:flex-row-reverse sm:px-6\">\n              {onOk && (\n                <button\n                  type=\"button\"\n                  onClick={onOk}\n                  className=\"inline-flex justify-center w-full px-3 py-2 text-sm font-semibold text-white bg-indigo-600 rounded-md shadow-xs hover:bg-indigo-500 sm:ml-3 sm:w-auto\"\n                >\n                  Ok\n                </button>\n              )}\n              {onCancel && (\n                <button\n                  type=\"button\"\n                  onClick={onCancel}\n                  className=\"inline-flex justify-center w-full px-3 py-2 mt-3 text-sm font-semibold text-gray-900 bg-white rounded-md shadow-xs ring-1 ring-gray-300 ring-inset hover:bg-gray-50 sm:mt-0 sm:w-auto\"\n                >\n                  Cancel\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport httpRequest from '~/lib/httpClient';\nimport { Response, Category } from '~/types';\nimport { updateStatus } from '~/features/global/globalSlice';\nimport { useAppDispatch } from '~/hooks';\n\nfunction SaveCategory() {\n  const dispatch = useAppDispatch();\n  const [title, setTitle] = useState<string>('');\n  const [alias, setAlias] = useState<string>('');\n  const [order, setOrder] = useState<number>(1);\n\n  const saveCategorys = async () => {\n    const res: Response<Category> = await httpRequest.post(\n      '/auth/category/create',\n      {\n        name: title,\n        alias,\n        orderid: order,\n      },\n    );\n    if (res?.code === 0) {\n      dispatch(\n        updateStatus({\n          toast: {\n            content: '新增成功',\n            show: true,\n          },\n        }),\n      );\n    }\n  };\n\n  return (\n    <>\n      <div className=\"grid grid-rows-3 w-9/12  gap-y-3 mx-4 text-base sticky top-[55px] bg-white z-20\">\n        <div className=\"inline-grid items-end h-16 p-3\">\n          <div className=\"sm:col-span-3\">\n            <div className=\"block text-sm font-medium leading-6 text-gray-900\">\n              名称\n            </div>\n            <div className=\"mt-2\">\n              <input\n                onChange={(e) => setTitle(e.target.value)}\n                type=\"text\"\n                autoComplete=\"given-name\"\n                value={title}\n                className=\"px-3 block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"inline-grid items-end h-16 p-3\">\n          <div className=\"sm:col-span-2\">\n            <div className=\"block text-sm font-medium leading-6 text-gray-900\">\n              别名\n            </div>\n            <div className=\"mt-2\">\n              <input\n                name=\"title\"\n                onChange={(e) => setAlias(e.target.value)}\n                type=\"text\"\n                autoComplete=\"given-name\"\n                value={alias}\n                className=\"px-3 block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"inline-grid items-end h-16 p-3\">\n          <div className=\"sm:col-span-2\">\n            <div className=\"block text-sm font-medium leading-6 text-gray-900\">\n              排列顺序\n            </div>\n            <div className=\"mt-2\">\n              <input\n                name=\"order\"\n                onChange={(e) => setOrder(parseInt(e.target.value, 10))}\n                type=\"number\"\n                autoComplete=\"given-name\"\n                value={order}\n                className=\"px-3 block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"inline-grid items-end justify-end h-16 p-3\">\n          <button\n            type=\"button\"\n            onClick={saveCategorys}\n            className=\"px-8 py-2 text-sm font-semibold text-white bg-indigo-600 rounded-md shadow-sm hover:bg-indigo-500 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n          >\n            保存\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default SaveCategory;\n","import React, { useState } from 'react';\nimport httpRequest from '~/lib/httpClient';\nimport { Response, Category } from '~/types';\nimport Modal from '~/components/modal/modal';\nimport { useAppDispatch } from '~/hooks';\nimport { addCategory } from '~/features/category/categorySlice';\nimport { updateStatus } from '~/features/global/globalSlice';\n\nfunction SearchCategory() {\n  const [catetorys, setCatetorys] = useState([]);\n  const dispatch = useAppDispatch();\n  const [open, setOpen] = useState(false);\n  const [curCategory, setCurCategory] = useState(null);\n  const searchCategorys = async () => {\n    const res: Response<Category[]> = await httpRequest.post('/category/find', {});\n    if (res?.code === 0) {\n        setCatetorys(res.data)\n    }\n  };\n\n  const onOk = async () => {\n    setOpen(false);\n    const data = await httpRequest.post('/auth/category/delete', {\n      id: curCategory.id,\n    }) as Response<Category> ;\n    if (data?.code === 0) {\n      dispatch(\n        updateStatus({\n          toast: {\n            content: '删除成功',\n            show: true,\n          },\n        }),\n      );\n      searchCategorys()\n    }\n  };\n\n  const onCancel = () => {\n    setOpen(false);\n  }\n\n  const deletePost = async (category) => {\n    setCurCategory(category);\n    setOpen(true);\n  };\n\n  const editPost = async (category) => {\n    dispatch(addCategory(category));\n    dispatch(updateStatus({tab:'3'}))\n  };\n\n  return (\n    <>\n      <div className=\"grid grid-cols-5 text-base pb-11\">\n        <div className=\"inline-grid items-center p-3 border-b border-gray-200\">ID</div>\n        <div className=\"inline-grid items-center p-3 border-b border-gray-200\">名称</div>\n        <div className=\"inline-grid items-center p-3 border-b border-gray-200\">别名</div>\n        <div className=\"inline-grid items-center p-3 border-b border-gray-200\">排列顺序</div>\n        <div className=\"inline-grid items-center p-3 border-b border-gray-200 cursor-pointer\">\n          <div>\n            <button\n                type=\"button\"\n                onClick={searchCategorys}\n                className=\"px-8 py-2 text-sm font-semibold text-white bg-indigo-600 rounded-md shadow-sm hover:bg-indigo-500 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n            >\n                搜索\n            </button>\n          </div>\n        </div>\n        {catetorys.map((category) => {\n          return (\n            <React.Fragment key={category.id}>\n              <div className=\"px-3 py-6 border-b border-gray-200\">\n                {category.id}\n              </div>\n              <div className=\"px-3 py-6 border-b border-gray-200\">{category.name}</div>\n              <div className=\"px-3 py-6 border-b border-gray-200\">{category.alias}</div>\n              <div className=\"px-3 py-6 border-b border-gray-200\">{category.orderid}</div>\n              <div className=\"px-3 py-6 border-b border-gray-200 cursor-pointer\">\n                <span className=\"flex items-center ml-auto font-medium text-indigo-600\">\n                  <span\n                    onClick={() => editPost(category)}\n                    className=\"pointer-events-auto hover:text-indigo-500\"\n                  >\n                    <img\n                      className=\"w-4 h-4\"\n                      src={`/edit.svg`}\n                      alt=\"Your Company\"\n                    />\n                  </span>\n                  <span className=\"w-px h-6 mx-3 bg-slate-400/20\"></span>\n                  <span\n                    onClick={() => deletePost(category)}\n                    className=\"pointer-events-auto hover:text-indigo-500\"\n                  >\n                    <img\n                      className=\"w-4 h-4\"\n                      src={`/delete.svg`}\n                      alt=\"Your Company\"\n                    />\n                  </span>\n                </span>\n              </div>\n            </React.Fragment>\n          );\n        })}\n      </div>\n      <Modal\n        {...{\n          open,\n          ...{ content: '确定删除当前类型？' },\n          onOk,\n          onCancel\n        }}\n      />\n    </>\n  );\n}\n\nexport default SearchCategory;\n","import { useAppSelector, useAppDispatch } from '~/hooks';\nimport { updateStatus } from '~/features/global/globalSlice';\n\nexport default function Tabs(props) {\n  const { items } = props;\n  const itemKey = useAppSelector((state) => state.global.tab);\n  const dispatch = useAppDispatch();\n  const onSelectTab = (key) => {\n    dispatch(\n      updateStatus({\n        tab: key,\n      }),\n    );\n  };\n  return (\n    <div className=\"min-h-full\">\n      <nav className=\"bg-white\">\n        <div className=\"w-9/12 px-4 mx-auto sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16 border-b border-gray-300\">\n            <div className=\"flex items-center\">\n              <div className=\"block\">\n                <div className=\"flex items-baseline space-x-4\">\n                  {items.filter(item => item.label).map((item) => (\n                    <div\n                      key={item.key}\n                      onClick={() => onSelectTab(item.key)}\n                      className={`px-3 py-5 text-sm font-medium relative  after:w-full after:h-0.5 after:absolute after:-bottom-0.5 after:left-0 ${\n                        itemKey === item.key\n                          ? 'after:bg-indigo-500 font-medium text-indigo-600'\n                          : 'hover:after:bg-indigo-500 text-gray-900'\n                      }`}\n                    >\n                      {item.label}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"w-full\">\n            {items.map((item) => (\n                    <div\n                      key={item.key}\n                      className={`mt-4 text-gray-500 ${\n                        itemKey === item.key\n                          ? 'block'\n                          : 'hidden'\n                      }`}\n                    >\n                      {item.children}\n                    </div>\n                  ))}\n            </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n","import React from 'react';\nimport Tabs from '~/components/tabs/tabs';\nimport SearchCategory from '~/components/search-category/searchCategory';\nimport EditCategory from '~/components/edit-category/editCategoty';\nimport SaveCategory from '~/components/save-category/saveCategoty';\n\nconst Category = () => {\n  const items = [\n    {\n      key: '1',\n      label: '搜索',\n      children: <SearchCategory />\n    },\n    {\n      key: '2',\n      label: '新增',\n      children: <SaveCategory />\n    },\n    {\n      key: '3',\n      label: '',\n      children: <EditCategory />\n    }\n  ];\n\n  return (\n    <>\n      <h2 className=\"px-6 py-4 text-2xl font-bold tracking-tight text-gray-900\">\n      </h2>\n      <Tabs items={items} itemKey={'1'} />\n    </>\n  );\n};\n\nexport default Category;\n"],"names":[],"mappings":"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"}